x-shared-env: &shared-api-worker-env
  # Expose Ports
  EXPOSE_SERVER_PORT: ${EXPOSE_SERVER_PORT:-5001}
  EXPOSE_PORT: ${EXPOSE_PORT:-80}
  EXPOSE_SSL_PORT: ${EXPOSE_SSL_PORT:-443}
  EXPOSE_DB_PORT: ${EXPOSE_DB_PORT:-3306}
  EXPOSE_REDIS_PORT: ${EXPOSE_REDIS_PORT:-6379}
  EXPOSE_MINIO_PORT: ${EXPOSE_MINIO_PORT:-9000}
  EXPOSE_MINIO_WEBUI_PORT: ${EXPOSE_MINIO_PORT:-9001}
  MINIO_UPLOAD_URL: ${MINIO_UPLOAD_URL:-}
  # MINIO_FRONTEND_URL: ${MINIO_FRONTEND_URL:-http://localhost:9001}
  # General Configuration
  TZ: ${TZ:-Asia/Shanghai}
  SERVER_BASE_URL: ${SERVER_BASE_URL:-/api/v1}
  # DB Configuration
  DB_DIALECT: ${DB_DIALECT:-mysql}
  DB_SYNC: ${DB_SYNC:-false}
  DB_HOST: ${DB_HOST:-work_mysql}
  DB_PORT: ${DB_PORT:-3306}
  DB_USER: ${DB_USER:-root}
  DB_PASSWORD: ${DB_PASSWORD:-test}
  DB_DATABASE: ${DB_DATABASE:-work_api}
  DB_TIMEZONE: ${DB_TIMEZONE:-+08:00}
  # Redis Configuration
  REDIS_HOST: ${REDIS_HOST:-work_redis}
  REDIS_PORT: ${REDIS_PORT:-6379}
  REDIS_PASSWORD: ${REDIS_PASSWORD:-}
  REDIS_USE_SSL: ${REDIS_USE_SSL:-false}
  REDIS_DB: ${REDIS_DB:-0}
  # MinIO Configuration
  MINIO_ALIAS: ${MINIO_ALIAS:-work_minio}
  MINIO_ENDPOINT: ${MINIO_ENDPOINT:-work_minio}
  MINIO_PORT: ${MINIO_PORT:-9000}
  MINIO_WEBUI_PORT: ${MINIO_WEBUI_PORT:-9001}
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
  MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-work}
  MINIO_REGION: ${MINIO_REGION:-ap-southeast-1}
  MINIO_USE_SSL: ${MINIO_USE_SSL:-false}

services:
  work_minio:
    image: minio/minio:RELEASE.2025-01-20T14-49-07Z
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
      # MINIO_ALIAS: ${MINIO_ALIAS:-workminio}
      # MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-work}
      # MINIO_POLICY: ${MINIO_POLICY:-workPolicy}
      # MINIO_FRONTEND_URL: ${MINIO_FRONTEND_URL:-http://localhost:9001}
      # MINIO_WEBUI_PORT: ${MINIO_WEBUI_PORT:-9001}
      # MINIO_REGION: ${MINIO_REGION:-ap-southeast-1}
      # MINIO_POLICY_FILE: /etc/minio/init/policy.json
    ports:
      - "${EXPOSE_MINIO_PORT:-9000}:${MINIO_PORT:-9000}"
      - "${EXPOSE_MINIO_WEBUI_PORT:-9001}:${MINIO_WEBUI_PORT:-9001}"
    volumes:
      - ./volumes/minio:/minio_data
      # - ./init/work-minio/:/etc/minio/init/
    # entrypoint: ["/etc/minio/init/entrypoint.sh"]
    command: minio server /minio_data --console-address ":${MINIO_WEBUI_PORT:-9001}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${MINIO_PORT:-9000}/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - work_shared_network
      - default

  # The mysql database.
  work_mysql:
    image: mysql:8.0.40
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      # The password for the default user.
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-test}
      MYSQL_DATABASE: ${DB_DATABASE:-work_api}
    command: 
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
    volumes:
      # - ./init/docker-entrypoint-initdb.d/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql # 挂载初始化脚本
      - ./volumes/mysql:/var/lib/mysql
      # - ./mysql/my.cnf:/etc/my.cnf
    ports:
      - "${EXPOSE_DB_PORT:-3306}:${DB_PORT:-3306}"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - work_shared_network

  # The redis cache.
  work_redis:
    image: redis:6-alpine
    restart: always
    volumes:
      # Mount the redis data directory to the container.
      - ./volumes/redis/data:/data
    # Set the redis password when startup redis server.
    command: redis-server --requirepass ${REDIS_PASSWORD:-test}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    # uncomment to expose redis port to host
    ports:
      - "${EXPOSE_REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    user: root
    networks:
      - work_shared_network

  # The work api.
  work_api:
    image: work-api:1.0.6
    restart: always
    environment:
      <<: *shared-api-worker-env
      SERVER_TITLE: ${SERVER_TITLE:-sndraw-work}
      SERVER_PORT: ${SERVER_PORT:-5001}
      SERVER_LOGS_PATH: ${SERVER_LOGS_PATH:-}
      SERVER_BASE_URL: ${SERVER_BASE_URL:-/api/v1}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:-}
      COOKIE_KEYS: ${COOKIE_KEYS:-test-key}
      COOKIE_MAXAGE: ${COOKIE_MAXAGE:-259200}
      COOKIE_NAMESPACE: ${COOKIE_NAMESPACE:-work_api}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN:-}
      COOKIE_SECURE: ${COOKIE_SECURE:-true}
      COOKIE_HTTPONLY: ${COOKIE_HTTPONLY:-true}
      CRYPTO_SECRETKEY: ${CRYPTO_SECRETKEY:-}
      OAUTH2_SECRET: ${OAUTH2_SECRET:-test-secret}
      OAUTH2_BEARER: ${OAUTH2_BEARER:-Bearer}
      OAUTH2_EXPIRES_IN: ${OAUTH2_EXPIRES_IN:-86400}
      LOGIN_MAX_ERROR_COUNT: ${LOGIN_MAX_ERROR_COUNT:-3}
      LOGIN_LOCK_TIME: ${LOGIN_LOCK_TIME:-5}
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./volumes/app/work-api/uploads:/app/api/uploads
    depends_on:
      - work_mysql
      - work_redis
    ports:
      - "${EXPOSE_SERVER_PORT:-5001}:${SERVER_PORT:-5001}"
    user: root
    networks:
      - work_shared_network
      - default

  # The work web.
  work_web:
    image: work-web:1.0.6
    restart: always
    volumes:
      # - ./volumes/app/work-api/uploads:/usr/share/nginx/html/uploads
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      #- ./nginx/ssl:/etc/ssl
    depends_on:
      - work_api
    ports:
      - "${EXPOSE_PORT:-80}:${PORT:-80}"
      - "${EXPOSE_SSL_PORT:-443}:${SSL_PORT:-443}"
    entrypoint: [ "/bin/bash", "/entrypoint.sh" ]
    networks:
      - work_shared_network
      - default

# 定义共享网络
networks:
  work_shared_network:
    driver: bridge
    internal: true

